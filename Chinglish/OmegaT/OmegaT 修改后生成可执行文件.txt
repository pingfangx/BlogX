在开发文档中没有介绍怎么打包生成可执行文件。

# 编译替换
一开始就是直接运行，然后把生成的 class 文件直接去替换 jar 包中的文件。

# 尝试生成 artifact
尝试之后失败，缺少一些 properties 等文件。

# 重读开发者文档
第一句
> OmegaT is built with Gradle. Run `gradlew tasks` from the top level to
see the available tasks.

因为之前对 Gradle 的使用不熟悉，所以读了这句也不知道啥意思，以为只是更新依赖之类的功能。  

现在知道了，直接运行，看到

    Distribution tasks
    ------------------
    distTar - Bundles the project as a distribution.
    distZip - Bundles the project as a distribution.
    installDist - Installs the project as a distribution as-is.
    installL10nFullDist - Installs the project as a distribution as-is.
    installL10nMinimalDist - Installs the project as a distribution as-is.

# Q:是否有预定义的任务
distZip 可能可以理解为 distributions 中的 main  
但是 installDist 却没有，是 Gradle 有预定义的任务吗？在哪里可以查到

A:是的，查看 [The Distribution Plugin](https://docs.gradle.org/current/userguide/distribution_plugin.html)

在 build.gradle 也看到了包含的相关资源
        
    distributions {
        main {
            contents {
                from('docs') {
                    into 'docs'
                }
                from(genDocIndex.outputs) {
                    include 'index.html'
                }
                from('release') {
                    into 'docs'
                    include 'changes.txt', 'doc-license.txt', 'OmegaT-license.txt', 'contributors.txt'
                }
                from('scripts') {
                    into 'scripts'
                }
                from('images') {
                    into 'images'
                }
                from('release') {
                    include '*.txt', '*.html'
                    exclude 'readme.txt'
                }
                from('release') {
                    include 'readme.txt'
                    filter(ReplaceTokens, tokens: [TRANSLATION_NOTICE: ''])
                    filter(FixCrLfFilter, eol: FixCrLfFilter.CrLf.newInstance('crlf'))
                }
                from('release/plugins-specific') {
                    into 'plugins'
                }
                from('release/linux-specific') {
                    filter(ReplaceTokens, tokens:
                        [VERSION_NUMBER_SUBST: project.version,
                         JAR_SUBST: jar.archiveName])
                    fileMode 0755
                }
                from('release/win32-specific') {
                    include 'OmegaT.bat'
                    filter(ReplaceTokens, tokens: [JAR_SUBST: jar.archiveName])
                }
                from('lib/licenses') {
                    into 'lib'
                }
                eachFile {
                    // Move main JAR up one level from lib.
                    if (it.name == jar.archiveName) {
                        it.relativePath = it.relativePath.parent.parent.append(true, jar.archiveName)
                    }
                }
            }
            distZip.archiveName = "${applicationName}_${version}${omtVersion.beta}_Without_JRE.zip"
        }
