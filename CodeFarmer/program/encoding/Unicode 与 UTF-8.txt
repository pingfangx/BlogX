[字符编码笔记：ASCII，Unicode 和 UTF-8](http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html)

[Unicode](https://zh.wikipedia.org/wiki/Unicode)

[UTF-8](https://zh.wikipedia.org/wiki/UTF-8)

阮一峰的博客写得易懂，配合 wiki 食用更佳。

> Unicode（中文：万国码、国际码、统一码、单一码）是计算机科学领域里的一项业界标准。它对世界上大部分的文字系统进行了整理、编码，使得计算机可以用更为简单的方式来呈现和处理文字。

> 需要注意的是，Unicode 只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储。


> UTF-8（8-bit Unicode Transformation Format）是一种针对Unicode的可变长度字符编码，也是一种前缀码。它可以用来表示Unicode标准中的任何字符，且其编码中的第一个字节仍与ASCII兼容，这使得原来处理ASCII字符的软件无须或只须做少部分修改，即可继续使用。因此，它逐渐成为邮箱、网页及其他存储或发送文字的应用中，优先采用的编码。

> 重复一遍，这里的关系是，UTF-8 是 Unicode 的实现方式之一。

# UTF-8编码字节含义
* 对于UTF-8编码中的任意字节B，如果B的第一位为0，则B独立的表示一个字符(ASCII码)；
* 如果B的第一位为1，第二位为0，则B为一个多字节字符中的一个字节(非ASCII字符)；
* 如果B的前两位为1，第三位为0，则B为两个字节表示的字符中的第一个字节；
* 如果B的前三位为1，第四位为0，则B为三个字节表示的字符中的第一个字节；
* 如果B的前四位为1，第五位为0，则B为四个字节表示的字符中的第一个字节；

因此，对UTF-8编码中的任意字节，根据第一位，可判断是否为ASCII字符；根据前二位，可判断该字节是否为一个字符编码的第一个字节；根据前四位（如果前两位均为1），可确定该字节为字符编码的第一个字节，并且可判断对应的字符由几个字节表示；根据前五位（如果前四位为1），可判断编码是否有错误或数据传输过程中是否有错误。



## Unicode 转 utf-8
[unicode.org](https://unicode.org/)  
我们选取第一个汉字

    一
    U4E00
    01001110 00000000
    用 3个字节表示
    
    1110 拼上前 4 位
    10 拼上后 6 位
    10 拼上最后 6 位
    11100100 10111000 10000000
    0xe4b880

## UTF-8 转 unicode
    0xe4b880
    0b111001001011100010000000
    11100100 10111000 10000000
    取出有效位 01001110 00000000    
    
## Little endian 和 Big endian
[字节顺序](https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F)

> 如果最低有效位在最高有效位的前面，则称小端序；反之则称大端序。
简单理解为位数从高到低，也就是说按顺序排，就是大端序，换了顺序就是小端序。

## BOM
[BOM-Byte order mark](https://en.wikipedia.org/wiki/Byte_order_mark)

# 实例
    新建 txt 写入“一”
    保存为 
    UCS-2 Big Endian
    fe ff 4e 00
    fe ff 按顺序，表示大端序，4e 00 表示 unicode
    
    UCS-2 Little Endian
    ff fe 00 4e
    小端序
    
    UTF-8
    ef bb bf e4 b8 80
    
    UTF-8 无 BOM
    e4 b8 80
