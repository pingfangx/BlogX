# 方法签名
> 重载的方法通过传递给方法的参数的数量和类型来区分。  
您不能声明多个具有相同名称和相同数量和类型参数的方法，因为编译器无法区分它们。  
编译器在区分方法时不考虑返回类型，所以即使它们具有不同的返回类型，也不能声明具有相同签名的两个方法。

但是在 dalvik 中是可以使用返回值区分的。

TODO dalvik .smali .class 这里概念不清

# 构造函数
> 所有类都至少有一个构造函数。  
如果一个类没有显式声明任何构造函数，那么 Java 编译器会自动提供一个无参数构造函数，称为 default constructor（默认构造函数）。  
此默认构造函数调用父类的无参数构造函数，或者如果该类没有父类，则调用 Object 构造函数。  
如果父项没有构造函数(Object 确实有一个)，编译器将拒绝该程序。

Q:
## 既然没有构造函数会自动生成，那父类为什么会没有构造函数呢?  
设为 private，就会报错父类没有可用的构造函数。