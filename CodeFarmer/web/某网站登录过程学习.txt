经过一番努力，终于搞定

页面加载后，执行 bps.loginRmbUserView();  
然后调用 bps.updateCheckCodeView() 更新验证码  
注意获取验证码的方法也要加 cookies

    bps.updateCheckCodeView = function () {
        var a = Date.parse(new Date());
        $("#checkcode").attr("src", "/service/gc.html?timestamp=" + a)
    };  

登录按钮调用

    bps.userloginAction()
    //调用
    bps.loginService($("#userAccount").val(),$("#userPassword").val(),$("#usercheckcode").val(),document.getElementById("rmbUser").checked);
    //方法
    bps.loginService = function (b, c, a, d) {
        if ($("#loginForm").form("validate")) {
            bps.loginServiceSure(b, c, d, a)
        }
    };
    //实际登录
    bps.loginServiceSure = function (b, d, e, a) {
        var f = {userAccount: b, userPassword: d, code: a, rid: bps.getCookieRid("rid"), key: bps.getRandomSeries(50)};
        var c = {
            url: bps.url.login.login,
            parameters: f,
            successCallback: bps.loginView,
            callBackPar: {userAccount: b, userPassword: d, RmbUser: e}
        };
        base.dao(c)
    };
    // key 获取
    bps.getRandomSeries = function (a) {
        return Math.floor(Math.random() * (a))
    };
    //登录回调
    bps.loginView = function (e, b) {
        if (e.code == 200) {
            var a = e.data.userBindingType;
            var f = e.data.passwordLevel;
            if (a != undefined && a != "undefined" && parseInt(a) > 0 && f == 0) {
                base.addCookie("bindingFog", 1, {path: "/", domain: "faxuan.net"})
            }
            var c = base.getCookie("loginUser", c);
            if (null != c && null != c.userAccount && null != c.onlineTime) {
                var d = Date.parse(new Date());
                if (((d - c.onlineTime) < 3 * 60 * 1000) && (b.userAccount != c.userAccount)) {
                    bps.popwinOpenForLogin({
                        msg: "系统检测到您可能登录多个账号，</br>点击【确定】会将已登录账号强制下线。",
                        title: "操作提示",
                        confirmCallback: bps.confirmFunct,
                        confirmParas: b.RmbUser + "," + e.data.userAccount + "," + b.userPassword + "," + e.data.userName + "," + e.data.userType + "," + e.data.roleId + "," + e.data.domainCode + "," + e.data.rankId + "," + e.data.lockFlag + "," + e.data.areaCode + "," + e.data.domainName + "," + e.data.id + "," + e.data.domainType + "," + e.data.sid + "," + f + "," + a + "," + e.data.politicsCode,
                        hasConfirm: true,
                        hasCancel: true
                    })
                } else {
                    bps.updateUserCook(e, b)
                }
            } else {
                bps.updateUserCook(e, b)
            }
        } else {
            bps.popwinOpenForLogin({msg: e.msg, title: "操作提示", hasConfirm: true, hasCancel: false})
        }
    };
    
    
    
# 后续问题处理
虽然整个流程理清了，但是实际处理过程中，登录后保存的 cookies 无法使用。  
修改在线时间，也无法使用。  

对比登录前、登录后的 cookies ，只是 sid 和 onlineTime 不一致。  
对比正确的、失败的请求，发现顺序、 userName 以及多了 userPassword  
删除 userPassword ，还是失败  
修改 userName（改 ensure_ascii=False），还是失败  
依次删除请求的参数，发现只有 loginUser 影响  
仔细对比 loginUser，对比 json 是一样的（因为空格被格式化了）  
但是比较长度不一致，于是手动替换各转义，终于发现是因为格式化时多了空格  
修改 separators={',', ':'}  
还是失败，发现 onlineTime 是 int ，被错误转为 str  
修改，终于成功。

整理整个过程，对比其实应该着重比较 loginUser，因为 json 一直一样，就没有认真查看。