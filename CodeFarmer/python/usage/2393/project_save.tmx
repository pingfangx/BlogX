<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="OmegaT-4.1.4" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>(For example, the return value might be &lt;c5&gt;&lt;s6&gt;-&lt;/s6&gt; &lt;s7&gt;signal.SIGKILL&lt;/s7&gt;&lt;/c5&gt; if the subprocess was killed.) On Windows systems, the return value contains the signed integer return code from the child process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084732Z" creationid="pingfangx" creationdate="20180606T084732Z">
        <seg>(例如，如果子进程被终止，返回值可能是 &lt;c5&gt;&lt;s6&gt;-&lt;/s6&gt; &lt;s7&gt;signal.SIGKILL&lt;/s7&gt;&lt;/c5&gt;。)在 Windows 系统上，返回值包含来自子进程的有符号整数返回码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Note that the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using these functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085003Z" creationid="pingfangx" creationdate="20180606T085003Z">
        <seg>（请注意， &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 模块为产生新进程和检索结果提供了更强大的功能;使用该模块优于使用这些功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(POSIX only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102444Z" creationid="pingfangx" creationdate="20180606T102444Z">
        <seg>(仅限 POSIX)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Windows only)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102732Z" creationid="pingfangx" creationdate="20180606T102732Z">
        <seg>(仅限 Windows)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(except that the &lt;e0&gt;input&lt;/e0&gt; and &lt;e1&gt;check&lt;/e1&gt; parameters are not supported)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090847Z" creationid="pingfangx" creationdate="20180606T090847Z">
        <seg>(不支持 &lt;e0&gt;input&lt;/e0&gt; 和 &lt;e1&gt;check&lt;/e1&gt; 参数)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(except that the &lt;e0&gt;input&lt;/e0&gt; parameter is not supported)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092044Z" creationid="pingfangx" creationdate="20180606T092044Z">
        <seg>(除了不支持 &lt;e0&gt;input&lt;/e0&gt; 参数)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a0&gt;&lt;c1&gt;&lt;s2&gt;shlex.split()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; can be useful when determining the correct tokenization for &lt;e3&gt;args&lt;/e3&gt;, especially in complex cases:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101123Z" creationid="pingfangx" creationdate="20180606T101123Z">
        <seg>在确定 &lt;e3&gt;args&lt;/e3&gt; 的正确标记时，尤其是在复杂情况下，&lt;a0&gt;&lt;c1&gt;&lt;s2&gt;shlex.split()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 是有用的:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a13&gt;&lt;c14&gt;&lt;s15&gt;PIPE&lt;/s15&gt;&lt;/c14&gt;&lt;/a13&gt; indicates that a new pipe to the child should be created.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102021Z" creationid="pingfangx" creationdate="20180606T102021Z">
        <seg>&lt;a13&gt;&lt;c14&gt;&lt;s15&gt;PIPE&lt;/s15&gt;&lt;/c14&gt;&lt;/a13&gt; 表示应该创建一个新的管道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;a16&gt;&lt;c17&gt;&lt;s18&gt;DEVNULL&lt;/s18&gt;&lt;/c17&gt;&lt;/a16&gt; indicates that the special file &lt;a19&gt;&lt;c20&gt;&lt;s21&gt;os.devnull&lt;/s21&gt;&lt;/c20&gt;&lt;/a19&gt; will be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102027Z" creationid="pingfangx" creationdate="20180606T102027Z">
        <seg>&lt;a16&gt;&lt;c17&gt;&lt;s18&gt;DEVNULL&lt;/s18&gt;&lt;/c17&gt;&lt;/a16&gt; 表示特殊文件 &lt;a19&gt;&lt;c20&gt;&lt;s21&gt;os.devnull&lt;/s21&gt;&lt;/c20&gt;&lt;/a19&gt; 将被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;s1&gt;0&lt;/s1&gt;&lt;/c0&gt; means unbuffered (read and write are one system call and can return short)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101739Z" creationid="pingfangx" creationdate="20180606T101739Z">
        <seg>&lt;c0&gt;&lt;s1&gt;0&lt;/s1&gt;&lt;/c0&gt; 表示无缓冲(读取和写入是一个系统调用，可以返回短)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;c0&gt;&lt;s1&gt;1&lt;/s1&gt;&lt;/c0&gt; means line buffered (only usable if &lt;c2&gt;&lt;s3&gt;universal_newlines=True&lt;/s3&gt;&lt;/c2&gt; i.e., in a text mode)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101748Z" creationid="pingfangx" creationdate="20180606T101748Z">
        <seg>&lt;c0&gt;&lt;s1&gt;1&lt;/s1&gt;&lt;/c0&gt; 表示缓冲行(只有在 &lt;c2&gt;&lt;s3&gt;universal_newlines=True&lt;/s3&gt;&lt;/c2&gt; 时才可用，即在文本模式下)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;args&lt;/e0&gt; should be a sequence of program arguments or else a single string.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T100221Z" creationid="pingfangx" creationdate="20180606T100221Z">
        <seg>&lt;e0&gt;args&lt;/e0&gt; 应该是一个程序参数序列或者单个字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;bufsize&lt;/e0&gt; will be supplied as the corresponding argument to the &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;open()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; function when creating the stdin/stdout/stderr pipe file objects:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101727Z" creationid="pingfangx" creationdate="20180606T101727Z">
        <seg>当创建 stdin / stdout / stderr 管道文件对象时，&lt;e0&gt;bufsize&lt;/e0&gt; 将作为相应的参数提供给 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;open()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 函数：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;pass_fds&lt;/e0&gt; is an optional sequence of file descriptors to keep open between the parent and child.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102433Z" creationid="pingfangx" creationdate="20180606T102433Z">
        <seg>&lt;e0&gt;pass_fds&lt;/e0&gt; 是一个可选的文件描述符序列，用于在父代和子代之间保持开放。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e0&gt;stdin&lt;/e0&gt;, &lt;e1&gt;stdout&lt;/e1&gt; and &lt;e2&gt;stderr&lt;/e2&gt; specify the executed program’s standard input, standard output and standard error file handles, respectively.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102001Z" creationid="pingfangx" creationdate="20180606T102001Z">
        <seg>&lt;e0&gt;stdin&lt;/e0&gt;，&lt;e1&gt;stdout&lt;/e1&gt; 和 &lt;e2&gt;stderr&lt;/e2&gt; 分别指定执行程序的标准输入，标准输出和标准错误文件句柄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e4&gt;cwd&lt;/e4&gt; can be a &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;str&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; and &lt;a8&gt;&lt;s9&gt;path-like&lt;/s9&gt;&lt;/a8&gt; object.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102509Z" creationid="pingfangx" creationdate="20180606T102509Z">
        <seg>&lt;e4&gt;cwd&lt;/e4&gt; 可以是 &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;str&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; 和 &lt;a8&gt;&lt;s9&gt;path-like&lt;/s9&gt;&lt;/a8&gt; 对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;e6&gt;creationflags&lt;/e6&gt;, if given, can be &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;CREATE_NEW_CONSOLE&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; or &lt;a10&gt;&lt;c11&gt;&lt;s12&gt;CREATE_NEW_PROCESS_GROUP&lt;/s12&gt;&lt;/c11&gt;&lt;/a10&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102730Z" creationid="pingfangx" creationdate="20180606T102730Z">
        <seg>&lt;e6&gt;creationflags&lt;/e6&gt; 可以是 &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;CREATE_NEW_CONSOLE&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; 或 &lt;a10&gt;&lt;c11&gt;&lt;s12&gt;CREATE_NEW_PROCESS_GROUP&lt;/s12&gt;&lt;/c11&gt;&lt;/a10&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt;&lt;e1&gt;restore_signals&lt;/e1&gt; was added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102550Z" creationid="pingfangx" creationdate="20180606T102550Z">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt; &lt;e1&gt;restore_signals&lt;/e1&gt; 已添加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt;&lt;e1&gt;start_new_session&lt;/e1&gt; was added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102609Z" creationid="pingfangx" creationdate="20180606T102609Z">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt; &lt;e1&gt;start_new_session&lt;/e1&gt; 已添加。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt;Added context manager support.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102849Z" creationid="pingfangx" creationdate="20180606T102849Z">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt; 添加了上下文管理器支持。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt;The default for &lt;e1&gt;close_fds&lt;/e1&gt; was changed from &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;False&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; to what is described above.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102426Z" creationid="pingfangx" creationdate="20180606T102426Z">
        <seg>&lt;s0&gt;Changed in version 3.2: &lt;/s0&gt; &lt;e1&gt;close_fds&lt;/e1&gt; 的默认值已从 &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;False&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; 更改为如上所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.3.1: &lt;/s0&gt;&lt;e1&gt;bufsize&lt;/e1&gt; now defaults to -1 to enable buffering by default to match the behavior that most code expects.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101832Z" creationid="pingfangx" creationdate="20180606T101832Z">
        <seg>&lt;s0&gt;Changed in version 3.3.1: &lt;/s0&gt; &lt;e1&gt;bufsize&lt;/e1&gt; 现在默认为-1，以默认启用缓冲以匹配大多数代码所期望的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.6: &lt;/s0&gt;&lt;e1&gt;cwd&lt;/e1&gt; parameter accepts a &lt;a2&gt;&lt;s3&gt;path-like object&lt;/s3&gt;&lt;/a2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102526Z" creationid="pingfangx" creationdate="20180606T102526Z">
        <seg>&lt;s0&gt;Changed in version 3.6: &lt;/s0&gt; &lt;e1&gt;cwd&lt;/e1&gt; 参数接受 &lt;a2&gt;&lt;s3&gt;path-like object&lt;/s3&gt;&lt;/a2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;Changed in version 3.6: &lt;/s0&gt;Popen destructor now emits a &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;ResourceWarning&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; warning if the child process is still running.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102859Z" creationid="pingfangx" creationdate="20180606T102859Z">
        <seg>&lt;s0&gt;Changed in version 3.6: &lt;/s0&gt; 如果子进程仍在运行，Popen 析构函数现在会发出 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;ResourceWarning&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 警告。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;New in version 3.2: &lt;/s0&gt;The &lt;e1&gt;pass_fds&lt;/e1&gt; parameter was added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102449Z" creationid="pingfangx" creationdate="20180606T102449Z">
        <seg>&lt;s0&gt;New in version 3.2: &lt;/s0&gt; 添加了 &lt;e1&gt;pass_fds&lt;/e1&gt; 参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;s0&gt;New in version 3.6: &lt;/s0&gt;&lt;e1&gt;encoding&lt;/e1&gt; and &lt;e2&gt;errors&lt;/e2&gt; were added.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102708Z" creationid="pingfangx" creationdate="20180606T102708Z">
        <seg>&lt;s0&gt;New in version 3.6: &lt;/s0&gt; &lt;e1&gt;encoding&lt;/e1&gt; 和 &lt;e2&gt;errors&lt;/e2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, &lt;e24&gt;stderr&lt;/e24&gt; can be &lt;a25&gt;&lt;c26&gt;&lt;s27&gt;STDOUT&lt;/s27&gt;&lt;/c26&gt;&lt;/a25&gt;, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102056Z" creationid="pingfangx" creationdate="20180606T102056Z">
        <seg>此外，&lt;e24&gt;stderr&lt;/e24&gt; 可以是 &lt;a25&gt;&lt;c26&gt;&lt;s27&gt;STDOUT&lt;/s27&gt;&lt;/c26&gt;&lt;/a25&gt;，这表明来自应用程序的 stderr 数据应该被捕获到相同的文件句柄为 stdout。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Attributes of that exception hold the arguments, the exit code, and stdout and stderr if they were captured.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093736Z" creationid="pingfangx" creationdate="20180606T093736Z">
        <seg>该异常的属性包含参数，退出代码以及 stdout 和 stderr（如果它们被捕获）。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, the program to execute is the first item in &lt;e1&gt;args&lt;/e1&gt; if &lt;e2&gt;args&lt;/e2&gt; is a sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T100230Z" creationid="pingfangx" creationdate="20180606T100230Z">
        <seg>默认情况下，如果 &lt;e2&gt;args&lt;/e2&gt; 是一个序列，则要执行的程序是 &lt;e1&gt;args&lt;/e1&gt; 中的第一个项目。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, this function will return the data as encoded bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092244Z" creationid="pingfangx" creationdate="20180606T092244Z">
        <seg>默认情况下，此函数将以编码字节的形式返回数据。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Changes to &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;sys.stdin&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt;, etc. are not reflected in the environment of the executed command.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085933Z" creationid="pingfangx" creationdate="20180606T085933Z">
        <seg>执行的命令的环境中不会反映 &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;sys.stdin&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; 等的变化。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Check especially the &lt;a3&gt;&lt;s4&gt;Replacing Older Functions with the subprocess Module&lt;/s4&gt;&lt;/a3&gt; section.)</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085027Z" creationid="pingfangx" creationdate="20180606T085027Z">
        <seg>特别检查 &lt;a3&gt;&lt;s4&gt;Replacing Older Functions with the subprocess Module&lt;/s4&gt;&lt;/a3&gt; 部分。）</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Currently this includes the SIGPIPE, SIGXFZ and SIGXFSZ signals.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102547Z" creationid="pingfangx" creationdate="20180606T102547Z">
        <seg>目前这包括 SIGPIPE，SIGXFZ 和 SIGXFSZ 信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not use &lt;c0&gt;&lt;s1&gt;stdout=PIPE&lt;/s1&gt;&lt;/c0&gt; or &lt;c2&gt;&lt;s3&gt;stderr=PIPE&lt;/s3&gt;&lt;/c2&gt; with this function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091032Z" creationid="pingfangx" creationdate="20180606T091032Z">
        <seg>使用此功能不要使用 &lt;c0&gt;&lt;s1&gt;stdout=PIPE&lt;/s1&gt;&lt;/c0&gt; 或 &lt;c2&gt;&lt;s3&gt;stderr=PIPE&lt;/s3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Examples:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093829Z" creationid="pingfangx" creationdate="20180606T093829Z">
        <seg>例子：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute a child program in a new process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095737Z" creationid="pingfangx" creationdate="20180606T095737Z">
        <seg>在新进程中执行子程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute the command (a string) in a subshell.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085917Z" creationid="pingfangx" creationdate="20180606T085917Z">
        <seg>在子 shell 中执行命令(一个字符串)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Execute the program &lt;e0&gt;path&lt;/e0&gt; in a new process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084915Z" creationid="pingfangx" creationdate="20180606T084915Z">
        <seg>在新进程中执行程序 &lt;e0&gt;path&lt;/e0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more advanced use cases, the underlying &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;Popen&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; interface can be used directly.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092849Z" creationid="pingfangx" creationdate="20180606T092849Z">
        <seg>对于更高级的用例，可以直接使用底层的 &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;Popen&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; 接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, explicitly passing &lt;c3&gt;&lt;s4&gt;input=None&lt;/s4&gt;&lt;/c3&gt; to inherit the parent’s standard input file handle is not supported.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092240Z" creationid="pingfangx" creationdate="20180606T092240Z">
        <seg>但是，不支持显式传递 &lt;c3&gt;&lt;s4&gt;input=None&lt;/s4&gt;&lt;/c3&gt; 来继承父级的标准输入文件句柄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, the original &lt;e5&gt;args&lt;/e5&gt; is still passed to the program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101908Z" creationid="pingfangx" creationdate="20180606T101908Z">
        <seg>但是，原始的 &lt;e5&gt;args&lt;/e5&gt; 仍然传递给程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, this can only be done if not passing arguments to the program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101054Z" creationid="pingfangx" creationdate="20180606T101054Z">
        <seg>但是，只有在不向程序传递参数的情况下才能完成此操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;c9&gt;&lt;s10&gt;shell=True&lt;/s10&gt;&lt;/c9&gt;, on POSIX the &lt;e11&gt;executable&lt;/e11&gt; argument specifies a replacement shell for the default &lt;c12&gt;&lt;s13&gt;/bin/sh&lt;/s13&gt;&lt;/c12&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101939Z" creationid="pingfangx" creationdate="20180606T101939Z">
        <seg>如果 &lt;c9&gt;&lt;s10&gt;shell=True&lt;/s10&gt;&lt;/c9&gt;，则在 POSIX 上，&lt;e11&gt;executable&lt;/e11&gt; 参数为默认的 &lt;c12&gt;&lt;s13&gt;/bin/sh&lt;/s13&gt;&lt;/c12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;check&lt;/e0&gt; is true, and the process exits with a non-zero exit code, a &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;CalledProcessError&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; exception will be raised.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093720Z" creationid="pingfangx" creationdate="20180606T093720Z">
        <seg>如果 &lt;e0&gt;check&lt;/e0&gt; 为 true，并且该进程以非零退出代码退出，则 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;CalledProcessError&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 异常将为抛出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;close_fds&lt;/e0&gt; is true, all file descriptors except &lt;c1&gt;&lt;s2&gt;0&lt;/s2&gt;&lt;/c1&gt;, &lt;c3&gt;&lt;s4&gt;1&lt;/s4&gt;&lt;/c3&gt; and &lt;c5&gt;&lt;s6&gt;2&lt;/s6&gt;&lt;/c5&gt; will be closed before the child process is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102229Z" creationid="pingfangx" creationdate="20180606T102229Z">
        <seg>如果 &lt;e0&gt;close_fds&lt;/e0&gt; 为 true，则除 &lt;c1&gt;&lt;s2&gt;0&lt;/s2&gt;&lt;/c1&gt;，&lt;c3&gt;&lt;s4&gt;1&lt;/s4&gt;&lt;/c3&gt; 和 &lt;c5&gt;&lt;s6&gt;2&lt;/s6&gt;&lt;/c5&gt; 外的所有文件描述符将在执行子进程之前关闭。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;cwd&lt;/e0&gt; is not &lt;c1&gt;&lt;s2&gt;None&lt;/s2&gt;&lt;/c1&gt;, the function changes the working directory to &lt;e3&gt;cwd&lt;/e3&gt; before executing the child.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102504Z" creationid="pingfangx" creationdate="20180606T102504Z">
        <seg>如果 &lt;e0&gt;cwd&lt;/e0&gt; 不是 &lt;c1&gt;&lt;s2&gt;None&lt;/s2&gt;&lt;/c1&gt;，那么在执行该子项之前，该函数会将工作目录更改为 &lt;e3&gt;cwd&lt;/e3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;encoding&lt;/e0&gt; or &lt;e1&gt;errors&lt;/e1&gt; are specified, or &lt;e2&gt;universal_newlines&lt;/e2&gt; is true, file objects for stdin, stdout and stderr are opened in text mode using the specified &lt;e3&gt;encoding&lt;/e3&gt; and &lt;e4&gt;errors&lt;/e4&gt; or the &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;io.TextIOWrapper&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093756Z" creationid="pingfangx" creationdate="20180606T093756Z">
        <seg>如果指定了 &lt;e0&gt;encoding&lt;/e0&gt; 或 &lt;e1&gt;errors&lt;/e1&gt;，或者 &lt;e2&gt;universal_newlines&lt;/e2&gt; 为 true，则 stdin，stdout 和 stderr 的文件对象将在文本模式下使用指定的 &lt;e3&gt;encoding&lt;/e3&gt; 和 &lt;e4&gt;errors&lt;/e4&gt; 或 &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;io.TextIOWrapper&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; 默认。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;encoding&lt;/e0&gt; or &lt;e1&gt;errors&lt;/e1&gt; are specified, the file objects &lt;e2&gt;stdin&lt;/e2&gt;, &lt;e3&gt;stdout&lt;/e3&gt; and &lt;e4&gt;stderr&lt;/e4&gt; are opened in text mode with the specified encoding and &lt;e5&gt;errors&lt;/e5&gt;, as described above in &lt;a6&gt;&lt;s7&gt;Frequently Used Arguments&lt;/s7&gt;&lt;/a6&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102658Z" creationid="pingfangx" creationdate="20180606T102658Z">
        <seg>如果指定了 &lt;e0&gt;encoding&lt;/e0&gt; 或 &lt;e1&gt;errors&lt;/e1&gt;，则文件对象 &lt;e2&gt;stdin&lt;/e2&gt;，&lt;e3&gt;stdout&lt;/e3&gt; 和 &lt;e4&gt;stderr&lt;/e4&gt; 在文本模式下使用指定的编码和 &lt;e5&gt;errors&lt;/e5&gt; 打开，如上面 &lt;a6&gt;&lt;s7&gt;Frequently Used Arguments&lt;/s7&gt;&lt;/a6&gt; 中所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;env&lt;/e0&gt; is not &lt;c1&gt;&lt;s2&gt;None&lt;/s2&gt;&lt;/c1&gt;, it must be a mapping that defines the environment variables for the new process; these are used instead of the default behavior of inheriting the current process’ environment.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102621Z" creationid="pingfangx" creationdate="20180606T102621Z">
        <seg>如果 &lt;e0&gt;env&lt;/e0&gt; 不是 &lt;c1&gt;&lt;s2&gt;None&lt;/s2&gt;&lt;/c1&gt;，它必须是一个映射，为新进程定义环境变量;这些被用来代替继承当前进程环境的默认行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;mode&lt;/e0&gt; is &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;P_NOWAIT&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt;, this function returns the process id of the new process; if &lt;e4&gt;mode&lt;/e4&gt; is &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;P_WAIT&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt;, returns the process’s exit code if it exits normally, or &lt;c8&gt;&lt;s9&gt;-signal&lt;/s9&gt;&lt;/c8&gt;, where &lt;e10&gt;signal&lt;/e10&gt; is the signal that killed the process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085153Z" creationid="pingfangx" creationdate="20180606T085132Z">
        <seg>如果 &lt;e0&gt;mode&lt;/e0&gt; 是 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;P_NOWAIT&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt;，该函数返回新进程的进程 ID;如果 &lt;e4&gt;mode&lt;/e4&gt; 是 &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;P_WAIT&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt;，则返回进程退出代码（如果正常退出）或 &lt;c8&gt;&lt;s9&gt;-signal&lt;/s9&gt;&lt;/c8&gt;，其中 &lt;e10&gt;signal&lt;/e10&gt; 是杀死进程的信号。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;preexec_fn&lt;/e0&gt; is set to a callable object, this object will be called in the child process just before the child is executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102108Z" creationid="pingfangx" creationdate="20180606T102108Z">
        <seg>如果将 &lt;e0&gt;preexec_fn&lt;/e0&gt; 设置为可调用对象，则将在子进程执行之前在子进程中调用此对象。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;restore_signals&lt;/e0&gt; is true (the default) all signals that Python has set to SIG_IGN are restored to SIG_DFL in the child process before the exec.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102541Z" creationid="pingfangx" creationdate="20180606T102541Z">
        <seg>如果 &lt;e0&gt;restore_signals&lt;/e0&gt; 为 true(缺省值)，则 Python 设置为 SIG_IGN 的所有信号都会在执行 exec 之前的子进程中恢复为 SIG_DFL。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e0&gt;start_new_session&lt;/e0&gt; is true the setsid() system call will be made in the child process prior to the execution of the subprocess.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102606Z" creationid="pingfangx" creationdate="20180606T102606Z">
        <seg>如果 &lt;e0&gt;start_new_session&lt;/e0&gt; 为 true，则将在执行子进程之前在子进程中进行 setsid() 系统调用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e3&gt;args&lt;/e3&gt; is a string, the interpretation is platform-dependent and described below.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T100952Z" creationid="pingfangx" creationdate="20180606T100952Z">
        <seg>如果 &lt;e3&gt;args&lt;/e3&gt; 是一个字符串，则解释依赖于平台，并在下面进行描述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e3&gt;shell&lt;/e3&gt; is &lt;c4&gt;&lt;s5&gt;True&lt;/s5&gt;&lt;/c4&gt;, it is recommended to pass &lt;e6&gt;args&lt;/e6&gt; as a string rather than as a sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101419Z" creationid="pingfangx" creationdate="20180606T101419Z">
        <seg>如果 &lt;e3&gt;shell&lt;/e3&gt; 为 &lt;c4&gt;&lt;s5&gt;True&lt;/s5&gt;&lt;/c4&gt;，建议将 &lt;e6&gt;args&lt;/e6&gt; 作为字符串而不是序列传递。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e4&gt;args&lt;/e4&gt; is a string, the string specifies the command to execute through the shell.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101446Z" creationid="pingfangx" creationdate="20180606T101446Z">
        <seg>如果 &lt;e4&gt;args&lt;/e4&gt; 是一个字符串，则该字符串指定要通过 shell 执行的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e5&gt;args&lt;/e5&gt; is a sequence, the first item specifies the command string, and any additional items will be treated as additional arguments to the shell itself.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101509Z" creationid="pingfangx" creationdate="20180606T101509Z">
        <seg>如果 &lt;e5&gt;args&lt;/e5&gt; 是一个序列，则第一个项目指定命令字符串，任何其他项目将被视为 shell 本身的附加参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e5&gt;command&lt;/e5&gt; generates any output, it will be sent to the interpreter standard output stream.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085939Z" creationid="pingfangx" creationdate="20180606T085939Z">
        <seg>如果 &lt;e5&gt;command&lt;/e5&gt; 产生任何输出，它将被发送到解释器标准输出流。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;e8&gt;universal_newlines&lt;/e8&gt; is &lt;c9&gt;&lt;s10&gt;True&lt;/s10&gt;&lt;/c9&gt;, they are opened in text mode with default encoding.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102703Z" creationid="pingfangx" creationdate="20180606T102703Z">
        <seg>如果 &lt;e8&gt;universal_newlines&lt;/e8&gt; 为 &lt;c9&gt;&lt;s10&gt;True&lt;/s10&gt;&lt;/c9&gt;，则它们以默认编码的文本模式打开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If given, &lt;e0&gt;startupinfo&lt;/e0&gt; will be a &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;STARTUPINFO&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; object, which is passed to the underlying &lt;c4&gt;&lt;s5&gt;CreateProcess&lt;/s5&gt;&lt;/c4&gt; function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102720Z" creationid="pingfangx" creationdate="20180606T102720Z">
        <seg>如果给出，&lt;startup&gt; &lt;startup&gt; &lt;/e0&gt;将是 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;STARTUPINFO&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 对象，该对象被传递给底层的 &lt;c4&gt;&lt;s5&gt;CreateProcess&lt;/s5&gt;&lt;/c4&gt; 函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If specified, &lt;e0&gt;env&lt;/e0&gt; must provide any variables required for the program to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102629Z" creationid="pingfangx" creationdate="20180606T102629Z">
        <seg>如果指定，&lt;e0&gt;env&lt;/e0&gt; 必须提供程序执行所需的任何变量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the return code is negative, the process was terminated by the signal given by the negated value of the return code.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084710Z" creationid="pingfangx" creationdate="20180606T084710Z">
        <seg>如果返回码是负数，则处理过程由返回码的取反值给出的信号终止。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the return code was non-zero it raises a &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;CalledProcessError&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092126Z" creationid="pingfangx" creationdate="20180606T092126Z">
        <seg>如果返回码不为零，则会引发 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;CalledProcessError&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the return code was zero then return, otherwise raise &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;CalledProcessError&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091953Z" creationid="pingfangx" creationdate="20180606T091953Z">
        <seg>如果返回码为零，则返回，否则引发 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;CalledProcessError&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the timeout expires, the child process will be killed and waited for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093537Z" creationid="pingfangx" creationdate="20180606T093537Z">
        <seg>如果超时过期，子进程将被终止并等待。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If used it must be a byte sequence, or a string if &lt;e4&gt;encoding&lt;/e4&gt; or &lt;e5&gt;errors&lt;/e5&gt; is specified or &lt;e6&gt;universal_newlines&lt;/e6&gt; is true.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093633Z" creationid="pingfangx" creationdate="20180606T093633Z">
        <seg>如果使用它，则必须是字节序列，或者如果指定了 &lt;e4&gt;encoding&lt;/e4&gt; 或 &lt;e5&gt;errors&lt;/e5&gt; 或 &lt;e6&gt;universal_newlines&lt;/e6&gt; 为真，则为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you must use it, keep it trivial!</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102129Z" creationid="pingfangx" creationdate="20180606T102129Z">
        <seg>如果你必须使用它，保持它微不足道！</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you need to modify the environment for the child use the &lt;e0&gt;env&lt;/e0&gt; parameter rather than doing it in a &lt;e1&gt;preexec_fn&lt;/e1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102142Z" creationid="pingfangx" creationdate="20180606T102142Z">
        <seg>如果您需要为孩子修改环境，请使用 &lt;e0&gt;env&lt;/e0&gt; 参数，而不是在 &lt;e1&gt;preexec_fn&lt;/e1&gt; 中执行。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In either case, the arguments to the child process must start with the name of the command being run.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085309Z" creationid="pingfangx" creationdate="20180606T085309Z">
        <seg>无论哪种情况，子进程的参数都必须以正在运行的命令的名称开始。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In particular, the function looks for &lt;e10&gt;executable&lt;/e10&gt; (or for the first item in &lt;e11&gt;args&lt;/e11&gt;) relative to &lt;e12&gt;cwd&lt;/e12&gt; if the executable path is a relative path.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102519Z" creationid="pingfangx" creationdate="20180606T102519Z">
        <seg>特别是，如果可执行路径是相对路径，该函数会查找 &lt;e10&gt;executable&lt;/e10&gt;(或 &lt;e11&gt;args&lt;/e11&gt; 中的第一项)相对于 &lt;e12&gt;cwd&lt;/e12&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In versions prior to Python 3.2.4 and 3.3.1 it incorrectly defaulted to &lt;c2&gt;&lt;s3&gt;0&lt;/s3&gt;&lt;/c2&gt; which was unbuffered and allowed short reads.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101842Z" creationid="pingfangx" creationdate="20180606T101842Z">
        <seg>在 Python 3.2.4 和 3.3.1 之前的版本中，它错误地默认为 &lt;c2&gt;&lt;s3&gt;0&lt;/s3&gt;&lt;/c2&gt;，这是未缓冲的并允许短读取。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is very seldom needed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101854Z" creationid="pingfangx" creationdate="20180606T101854Z">
        <seg>这是很少需要的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It offers a lot of flexibility so that developers are able to handle the less common cases not covered by the convenience functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095723Z" creationid="pingfangx" creationdate="20180606T095723Z">
        <seg>它提供了很大的灵活性，以便开发人员能够处理不属于便利功能范围的不常见情况。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Minimize the number of libraries you call into.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102132Z" creationid="pingfangx" creationdate="20180606T102132Z">
        <seg>最大限度地减少您调用的库的数量。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most programs treat the program specified by &lt;e6&gt;args&lt;/e6&gt; as the command name, which can then be different from the program actually executed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101920Z" creationid="pingfangx" creationdate="20180606T101920Z">
        <seg>大多数程序将由 &lt;e6&gt;args&lt;/e6&gt; 指定的程序视为命令名，这可能与实际执行的程序不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091034Z" creationid="pingfangx" creationdate="20180606T091034Z">
        <seg>注意</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note in particular that options (such as &lt;e0&gt;-input&lt;/e0&gt;) and arguments (such as &lt;e1&gt;eggs.txt&lt;/e1&gt;) that are separated by whitespace in the shell go in separate list elements, while arguments that need quoting or backslash escaping when used in the shell (such as filenames containing spaces or the &lt;e2&gt;echo&lt;/e2&gt; command shown above) are single list elements.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101325Z" creationid="pingfangx" creationdate="20180606T101325Z">
        <seg>请特别注意，shell 中由空白分隔的选项(例如 &lt;e0&gt;-input&lt;/e0&gt;)和参数(例如 &lt;e1&gt;eggs.txt&lt;/e1&gt;)将放在单独的列表元素中，而参数在 shell 中使用时需要引用或反斜杠转义(例如包含空格的文件名或上面显示的 &lt;e2&gt;echo&lt;/e2&gt; 命令)是单列表元素。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that POSIX does not specify the meaning of the return value of the C &lt;c3&gt;&lt;s4&gt;system()&lt;/s4&gt;&lt;/c3&gt; function, so the return value of the Python function is system-dependent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090018Z" creationid="pingfangx" creationdate="20180606T090018Z">
        <seg>请注意，POSIX 并未指定 C &lt;c3&gt;&lt;s4&gt;system()&lt;/s4&gt;&lt;/c3&gt; 函数的返回值的含义，因此 Python 函数的返回值是与系统相关的。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that on Windows, you cannot set &lt;e14&gt;close_fds&lt;/e14&gt; to true and also redirect the standard handles by setting &lt;e15&gt;stdin&lt;/e15&gt;, &lt;e16&gt;stdout&lt;/e16&gt; or &lt;e17&gt;stderr&lt;/e17&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102419Z" creationid="pingfangx" creationdate="20180606T102419Z">
        <seg>请注意，在 Windows 上，您无法将 &lt;e14&gt;close_fds&lt;/e14&gt; 设置为 true，并通过设置 &lt;e15&gt;stdin&lt;/e15&gt;，&lt;e16&gt;stdout&lt;/e16&gt; 或 &lt;e17&gt;stderr&lt;/e17&gt; 来重定向标准句柄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On POSIX systems, if the return code is positive it represents the return value of the process left-shifted by one byte.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084651Z" creationid="pingfangx" creationdate="20180606T084651Z">
        <seg>在 POSIX 系统上，如果返回码是正值，它表示进程的返回值左移一个字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On POSIX with &lt;c0&gt;&lt;s1&gt;shell=True&lt;/s1&gt;&lt;/c0&gt;, the shell defaults to &lt;c2&gt;&lt;s3&gt;/bin/sh&lt;/s3&gt;&lt;/c2&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101440Z" creationid="pingfangx" creationdate="20180606T101440Z">
        <seg>在使用 &lt;c0&gt;&lt;s1&gt;shell=True&lt;/s1&gt;&lt;/c0&gt; 的 POSIX 上，shell 默认为 &lt;c2&gt;&lt;s3&gt;/bin/sh&lt;/s3&gt;&lt;/c2&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On POSIX, if &lt;e0&gt;args&lt;/e0&gt; is a string, the string is interpreted as the name or path of the program to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101045Z" creationid="pingfangx" creationdate="20180606T101045Z">
        <seg>在 POSIX 上，如果 &lt;e0&gt;args&lt;/e0&gt; 是一个字符串，则将该字符串解释为要执行的程序的名称或路径。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On POSIX, the &lt;e7&gt;args&lt;/e7&gt; name becomes the display name for the executable in utilities such as &lt;s8&gt;ps&lt;/s8&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101931Z" creationid="pingfangx" creationdate="20180606T101931Z">
        <seg>在 POSIX 上，&lt;e7&gt;args&lt;/e7&gt; 名称成为 &lt;s8&gt;ps&lt;/s8&gt; 等实用程序中可执行文件的显示名称。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On POSIX, the class uses &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;os.execvp()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;-like behavior to execute the child program.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095842Z" creationid="pingfangx" creationdate="20180606T095842Z">
        <seg>在 POSIX 上，类使用 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;os.execvp()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;-类似行为来执行子程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Unix, the return value is the exit status of the process encoded in the format specified for &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;wait()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090006Z" creationid="pingfangx" creationdate="20180606T090006Z">
        <seg>在 Unix 上，返回值是以 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;wait()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 格式编码的进程的退出状态。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows it is true when &lt;e7&gt;stdin&lt;/e7&gt;/&lt;e8&gt;stdout&lt;/e8&gt;/&lt;e9&gt;stderr&lt;/e9&gt; are &lt;a10&gt;&lt;c11&gt;&lt;s12&gt;None&lt;/s12&gt;&lt;/c11&gt;&lt;/a10&gt;, false otherwise.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102313Z" creationid="pingfangx" creationdate="20180606T102313Z">
        <seg>在 Windows 上，如果 &lt;e7&gt;stdin&lt;/e7&gt; / &lt;e8&gt;stdout&lt;/e8&gt; / &lt;e9&gt;stderr&lt;/e9&gt; 为 &lt;a10&gt;&lt;c11&gt;&lt;s12&gt;None&lt;/s12&gt;&lt;/c11&gt;&lt;/a10&gt; 则返回 true，否则返回 false。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows with &lt;c0&gt;&lt;s1&gt;shell=True&lt;/s1&gt;&lt;/c0&gt;, the &lt;s2/&gt;&lt;c3&gt;&lt;s4&gt;COMSPEC&lt;/s4&gt;&lt;/c3&gt; environment variable specifies the default shell.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101523Z" creationid="pingfangx" creationdate="20180606T101523Z">
        <seg>在具有 &lt;c0&gt;&lt;s1&gt;shell=True&lt;/s1&gt;&lt;/c0&gt; 的 Windows 上，&lt;s2/&gt; &lt;c3&gt;&lt;s4&gt;COMSPEC&lt;/s4&gt;&lt;/c3&gt; 环境变量指定了默认 shell。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, if &lt;e0&gt;args&lt;/e0&gt; is a sequence, it will be converted to a string in a manner described in &lt;a1&gt;&lt;s2&gt;Converting an argument sequence to a string on Windows&lt;/s2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101352Z" creationid="pingfangx" creationdate="20180606T101352Z">
        <seg>在 Windows 上，如果 &lt;e0&gt;args&lt;/e0&gt; 是一个序列，它将按照 &lt;a1&gt;&lt;s2&gt;Converting an argument sequence to a string on Windows&lt;/s2&gt;&lt;/a1&gt; 中描述的方式转换为字符串。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, if &lt;e13&gt;close_fds&lt;/e13&gt; is true then no handles will be inherited by the child process.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102320Z" creationid="pingfangx" creationdate="20180606T102320Z">
        <seg>在 Windows 上，如果 &lt;e13&gt;close_fds&lt;/e13&gt; 为 true，那么子进程将不会继承任何句柄。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, in order to run a &lt;a1&gt;side-by-side assembly&lt;/a1&gt; the specified &lt;e2&gt;env&lt;/e2&gt; &lt;s3&gt;must&lt;/s3&gt; include a valid &lt;s4/&gt;&lt;c5&gt;&lt;s6&gt;SystemRoot&lt;/s6&gt;&lt;/c5&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102639Z" creationid="pingfangx" creationdate="20180606T102639Z">
        <seg>在 Windows 上，为了运行 &lt;a1&gt;side-by-side assembly&lt;/a1&gt;，指定的 &lt;e2&gt;env&lt;/e2&gt; &lt;s3&gt;must&lt;/s3&gt; 包含有效的&lt;s4/&gt; &lt;c5&gt;&lt;s6&gt;SystemRoot&lt;/s6&gt;&lt;/c5&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, the class uses the Windows &lt;c3&gt;&lt;s4&gt;CreateProcess()&lt;/s4&gt;&lt;/c3&gt; function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095855Z" creationid="pingfangx" creationdate="20180606T095855Z">
        <seg>在 Windows 上，该类使用 Windows &lt;c3&gt;&lt;s4&gt;CreateProcess()&lt;/s4&gt;&lt;/c3&gt; 函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, the process id will actually be the process handle, so can be used with the &lt;a11&gt;&lt;c12&gt;&lt;s13&gt;waitpid()&lt;/s13&gt;&lt;/c12&gt;&lt;/a11&gt; function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085145Z" creationid="pingfangx" creationdate="20180606T085145Z">
        <seg>在 Windows 上，进程 ID 实际上是进程句柄，所以可以与 &lt;a11&gt;&lt;c12&gt;&lt;s13&gt;waitpid()&lt;/s13&gt;&lt;/c12&gt;&lt;/a11&gt; 函数一起使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On Windows, the return value is that returned by the system shell after running &lt;e0&gt;command&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090024Z" creationid="pingfangx" creationdate="20180606T090024Z">
        <seg>在 Windows 上，返回值是运行 &lt;e0&gt;command&lt;/e0&gt; 后由系统 shell 返回的值。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Open a pipe to or from command &lt;e0&gt;cmd&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T083829Z" creationid="pingfangx" creationdate="20180606T083829Z">
        <seg>打开管道到命令 &lt;e0&gt;cmd&lt;/e0&gt; ，或从命令 &lt;e0&gt;cmd&lt;/e0&gt; 打开管道。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, file objects are opened in binary mode.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093825Z" creationid="pingfangx" creationdate="20180606T093825Z">
        <seg>否则，文件对象以二进制模式打开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise, they are opened as binary streams.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102705Z" creationid="pingfangx" creationdate="20180606T102705Z">
        <seg>否则，它们会以二进制流的形式打开。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Popen objects are supported as context managers via the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;with&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; statement: on exit, standard file descriptors are closed, and the process is waited for.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102827Z" creationid="pingfangx" creationdate="20180606T102827Z">
        <seg>Popen 通过 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;with&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 语句支持上下文管理器：退出时，关闭标准文件描述符，并等待进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Prior to Python 3.5, these three functions comprised the high level API to subprocess.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090711Z" creationid="pingfangx" creationdate="20180606T090711Z">
        <seg>在 Python 3.5 之前，这三个函数将高级 API 组成了子进程。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Providing any &lt;e1&gt;pass_fds&lt;/e1&gt; forces &lt;e2&gt;close_fds&lt;/e2&gt; to be &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;True&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102440Z" creationid="pingfangx" creationdate="20180606T102440Z">
        <seg>提供 &lt;e1&gt;pass_fds&lt;/e1&gt; 强制 &lt;e2&gt;close_fds&lt;/e2&gt; 为 &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;True&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Read the &lt;a0&gt;Security Considerations&lt;/a0&gt; section before using &lt;c1&gt;&lt;s2&gt;shell=True&lt;/s2&gt;&lt;/c1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101610Z" creationid="pingfangx" creationdate="20180606T101610Z">
        <seg>在使用 &lt;c1&gt;&lt;s2&gt;shell=True&lt;/s2&gt;&lt;/c1&gt; 之前，阅读 &lt;a0&gt;Security Considerations&lt;/a0&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run command with arguments and return its output.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092121Z" creationid="pingfangx" creationdate="20180606T092121Z">
        <seg>用参数运行命令并返回其输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run command with arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091939Z" creationid="pingfangx" creationdate="20180606T091939Z">
        <seg>带参数运行命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run the command described by &lt;e0&gt;args&lt;/e0&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090753Z" creationid="pingfangx" creationdate="20180606T090753Z">
        <seg>运行 &lt;e0&gt;args&lt;/e0&gt; 中描述的命令。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;a3&gt;&lt;s4&gt;Replacing Older Functions with the subprocess Module&lt;/s4&gt;&lt;/a3&gt; section in the &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;subprocess&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; documentation for some helpful recipes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090217Z" creationid="pingfangx" creationdate="20180606T090217Z">
        <seg>请参阅 &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;subprocess&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; 文档中的 &lt;a3&gt;&lt;s4&gt;Replacing Older Functions with the subprocess Module&lt;/s4&gt;&lt;/a3&gt; 查看有用的帮助。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;e4&gt;shell&lt;/e4&gt; and &lt;e5&gt;executable&lt;/e5&gt; arguments for additional differences from the default behavior.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101002Z" creationid="pingfangx" creationdate="20180606T101002Z">
        <seg>请参阅 &lt;e4&gt;shell&lt;/e4&gt; 和 &lt;e5&gt;executable&lt;/e5&gt; 参数，以获取与默认行为的其他差异。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That is to say, &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;Popen&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; does the equivalent of:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101515Z" creationid="pingfangx" creationdate="20180606T101515Z">
        <seg>也就是说，&lt;a6&gt;&lt;c7&gt;&lt;s8&gt;Popen&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; 等价于：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; function was added in Python 3.5; if you need to retain compatibility with older versions, see the &lt;a3&gt;&lt;s4&gt;Older high-level API&lt;/s4&gt;&lt;/a3&gt; section.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092917Z" creationid="pingfangx" creationdate="20180606T092917Z">
        <seg>在 Python 3.5 中添加了&lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 函数;如果您需要保留与旧版本的兼容性，请参阅 &lt;a3&gt;&lt;s4&gt;Older high-level API&lt;/s4&gt;&lt;/a3&gt; 部分。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; module provides more powerful facilities for spawning new processes and retrieving their results; using that module is preferable to using this function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090149Z" creationid="pingfangx" creationdate="20180606T090149Z">
        <seg>&lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 模块为产生新进程和检索结果提供了更强大的功能。使用该模块优于使用此功能。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;CalledProcessError&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; object will have the return code in the &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;returncode&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; attribute and any output in the &lt;a9&gt;&lt;c10&gt;&lt;s11&gt;output&lt;/s11&gt;&lt;/c10&gt;&lt;/a9&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092212Z" creationid="pingfangx" creationdate="20180606T092212Z">
        <seg>&lt;a3&gt;&lt;c4&gt;&lt;s5&gt;CalledProcessError&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; 对象在 &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;returncode&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; 属性中包含返回代码，在 &lt;a9&gt;&lt;c10&gt;&lt;s11&gt;output&lt;/s11&gt;&lt;/c10&gt;&lt;/a9&gt; 属性中的包含任何输出。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;CalledProcessError&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; object will have the return code in the &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;returncode&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092039Z" creationid="pingfangx" creationdate="20180606T092039Z">
        <seg>&lt;a3&gt;&lt;c4&gt;&lt;s5&gt;CalledProcessError&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt; 对象在 &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;returncode&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; 属性中包含返回代码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;a4&gt;&lt;c5&gt;&lt;s6&gt;TimeoutExpired&lt;/s6&gt;&lt;/c5&gt;&lt;/a4&gt; exception will be re-raised after the child process has terminated.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093550Z" creationid="pingfangx" creationdate="20180606T093550Z">
        <seg>在子进程终止之后，&lt;a4&gt;&lt;c5&gt;&lt;s6&gt;TimeoutExpired&lt;/s6&gt;&lt;/c5&gt;&lt;/a4&gt; 异常将被重新引发。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;c0&gt;&lt;s1&gt;close&lt;/s1&gt;&lt;/c0&gt; method returns &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;None&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; if the subprocess exited successfully, or the subprocess’s return code if there was an error.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084631Z" creationid="pingfangx" creationdate="20180606T084631Z">
        <seg>如果子进程成功退出，则 &lt;c0&gt;&lt;s1&gt;close&lt;/s1&gt;&lt;/c0&gt; 方法返回 &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;None&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; ，否则如果有错误则返回子进程的返回码。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;executable&lt;/e0&gt; argument specifies a replacement program to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101852Z" creationid="pingfangx" creationdate="20180606T101852Z">
        <seg>&lt;e0&gt;executable&lt;/e0&gt; 参数指定要执行的替换程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;input&lt;/e0&gt; argument is passed to &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;Popen.communicate()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; and thus to the subprocess’s stdin.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093559Z" creationid="pingfangx" creationdate="20180606T093559Z">
        <seg>&lt;e0&gt;input&lt;/e0&gt; 参数传递给 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;Popen.communicate()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt;，从而传递给子进程的标准输入。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;preexec_fn&lt;/e0&gt; parameter is not safe to use in the presence of threads in your application.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102119Z" creationid="pingfangx" creationdate="20180606T102119Z">
        <seg>&lt;e0&gt;preexec_fn&lt;/e0&gt; 参数在应用程序中存在线程时不安全。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;shell&lt;/e0&gt; argument (which defaults to &lt;c1&gt;&lt;s2&gt;False&lt;/s2&gt;&lt;/c1&gt;) specifies whether to use the shell as the program to execute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101408Z" creationid="pingfangx" creationdate="20180606T101408Z">
        <seg>&lt;e0&gt;shell&lt;/e0&gt; 参数(默认为 &lt;c1&gt;&lt;s2&gt;False&lt;/s2&gt;&lt;/c1&gt;)指定是否使用 shell 作为要执行的程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e0&gt;timeout&lt;/e0&gt; argument is passed to &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;Popen.communicate()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093527Z" creationid="pingfangx" creationdate="20180606T093527Z">
        <seg>&lt;e0&gt;timeout&lt;/e0&gt; 参数传递给 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;Popen.communicate()&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e2&gt;start_new_session&lt;/e2&gt; parameter can take the place of a previously common use of &lt;e3&gt;preexec_fn&lt;/e3&gt; to call os.setsid() in the child.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102152Z" creationid="pingfangx" creationdate="20180606T102152Z">
        <seg>&lt;e2&gt;start_new_session&lt;/e2&gt; 参数可以代替以前常用的 &lt;e3&gt;preexec_fn&lt;/e3&gt; 来调用子级中的 os.setsid()。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;e6&gt;buffering&lt;/e6&gt; argument has the same meaning as the corresponding argument to the built-in &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;open()&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; function.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084431Z" creationid="pingfangx" creationdate="20180606T084431Z">
        <seg>&lt;e6&gt;buffering&lt;/e6&gt; 参数的含义与内置的 &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;open()&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; 函数的参数相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The actual encoding of the output data may depend on the command being invoked, so the decoding to text will often need to be handled at the application level.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092308Z" creationid="pingfangx" creationdate="20180606T092308Z">
        <seg>输出数据的实际编码可能取决于被调用的命令，因此解码到文本通常需要在应用程序级别进行处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The arguments shown above are merely the most common ones, described below in &lt;a0&gt;&lt;s1&gt;Frequently Used Arguments&lt;/s1&gt;&lt;/a0&gt; (hence the use of keyword-only notation in the abbreviated signature).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093311Z" creationid="pingfangx" creationdate="20180606T093311Z">
        <seg>上面显示的参数仅仅是最常用的参数，在 &lt;a0&gt;&lt;s1&gt;Frequently Used Arguments&lt;/s1&gt;&lt;/a0&gt; 中进行了介绍(因此在缩写签名中使用了关键字符号)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The arguments shown above are merely the most common ones.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090859Z" creationid="pingfangx" creationdate="20180606T090859Z">
        <seg>上面显示的参数仅仅是最常见的参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The arguments to &lt;a5&gt;&lt;c6&gt;&lt;s7&gt;Popen&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; are as follows.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095903Z" creationid="pingfangx" creationdate="20180606T095903Z">
        <seg>&lt;a5&gt;&lt;c6&gt;&lt;s7&gt;Popen&lt;/s7&gt;&lt;/c6&gt;&lt;/a5&gt; 的参数如下。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The child process could deadlock before exec is called.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102123Z" creationid="pingfangx" creationdate="20180606T102123Z">
        <seg>在调用 exec 之前，子进程可能会死锁。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The child process will block if it generates enough output to a pipe to fill up the OS pipe buffer as the pipes are not being read from.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091845Z" creationid="pingfangx" creationdate="20180606T091845Z">
        <seg>子进程会阻塞，如果因管道未被读取而产生足够的输出到管道，导致充满 OS 管道缓冲区。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The default varies by platform: Always true on POSIX.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102235Z" creationid="pingfangx" creationdate="20180606T102235Z">
        <seg>默认值因平台而异：在 POSIX 上始终为 true。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full function signature is largely the same as that of &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; - most arguments are passed directly through to that interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092228Z" creationid="pingfangx" creationdate="20180606T092228Z">
        <seg>完整的函数签名与 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 大致相同 - 大多数参数直接传递到该接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full function signature is largely the same as that of the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; constructor - this function passes all supplied arguments other than &lt;e3&gt;timeout&lt;/e3&gt; directly through to that interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091027Z" creationid="pingfangx" creationdate="20180606T091027Z">
        <seg>全功能签名与 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 构造函数的基本相同 - 该函数传递除 &lt;e3&gt;timeout&lt;/e3&gt; 外所有提供的参数到那个接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The full function signature is largely the same as that of the &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;Popen&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; constructor - apart from &lt;e5&gt;timeout&lt;/e5&gt;, &lt;e6&gt;input&lt;/e6&gt; and &lt;e7&gt;check&lt;/e7&gt;, all the arguments to this function are passed through to that interface.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093435Z" creationid="pingfangx" creationdate="20180606T093435Z">
        <seg>完整的函数签名与 &lt;a2&gt;&lt;c3&gt;&lt;s4&gt;Popen&lt;/s4&gt;&lt;/c3&gt;&lt;/a2&gt; 构造函数基本相同，除了 &lt;e5&gt;timeout&lt;/e5&gt;, &lt;e6&gt;input&lt;/e6&gt; 和 &lt;e7&gt;check&lt;/e7&gt;, 该函数的所有参数传递给那个接口。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The only time you need to specify &lt;c5&gt;&lt;s6&gt;shell=True&lt;/s6&gt;&lt;/c5&gt; on Windows is when the command you wish to execute is built into the shell (e.g. &lt;s7&gt;dir&lt;/s7&gt; or &lt;s8&gt;copy&lt;/s8&gt;).</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101556Z" creationid="pingfangx" creationdate="20180606T101556Z">
        <seg>在 Windows 上需要指定 &lt;c5&gt;&lt;s6&gt;shell=True&lt;/s6&gt;&lt;/c5&gt; 的唯一时间是您希望执行的命令内置于 shell 中(例如 &lt;s7&gt;dir&lt;/s7&gt; 或 &lt;s8&gt;copy&lt;/s8&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The recommended approach to invoking subprocesses is to use the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; function for all use cases it can handle.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092839Z" creationid="pingfangx" creationdate="20180606T092839Z">
        <seg>推荐的调用子进程的方法是对它可以处理的所有用例使用 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The return value is an open file object connected to the pipe, which can be read or written depending on whether &lt;e1&gt;mode&lt;/e1&gt; is &lt;c2&gt;&lt;s3&gt;'r'&lt;/s3&gt;&lt;/c2&gt; (default) or &lt;c4&gt;&lt;s5&gt;'w'&lt;/s5&gt;&lt;/c4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084344Z" creationid="pingfangx" creationdate="20180606T084344Z">
        <seg>返回值是一个连接到管道的打开的文件对象，其可以读或写，取决于 &lt;e1&gt;mode&lt;/e1&gt; 为 &lt;c2&gt;&lt;s3&gt;'r'&lt;/s3&gt;&lt;/c2&gt;(默认值)或 &lt;c4&gt;&lt;s5&gt;'w'&lt;/s5&gt;&lt;/c4&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The returned file object reads or writes text strings rather than bytes.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084440Z" creationid="pingfangx" creationdate="20180606T084440Z">
        <seg>返回的文件对象读取或写入文本字符串而不是字节。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The shell is given by the Windows environment variable &lt;s1/&gt;&lt;c2&gt;&lt;s3&gt;COMSPEC&lt;/s3&gt;&lt;/c2&gt;: it is usually &lt;s4&gt;cmd.exe&lt;/s4&gt;, which returns the exit status of the command run; on systems using a non-native shell, consult your shell documentation.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090059Z" creationid="pingfangx" creationdate="20180606T090059Z">
        <seg>该 shell 由 Windows 环境变量&lt;s1/&gt; &lt;c2&gt;&lt;s3&gt;COMSPEC&lt;/s3&gt;&lt;/c2&gt; 给出：它通常是 &lt;s4&gt;cmd.exe&lt;/s4&gt;，它返回命令运行;在使用非本地 shell 的系统上，请查阅您的 shell 文档。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The underlying process creation and management in this module is handled by the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; class.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T095654Z" creationid="pingfangx" creationdate="20180606T095654Z">
        <seg>该模块中的底层进程的创建和管理由 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 类处理。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The “l” and “v” variants of the &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;spawn*&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; functions differ in how command-line arguments are passed.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085221Z" creationid="pingfangx" creationdate="20180606T085221Z">
        <seg>函数参数的传递方式不同， &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;spawn*&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 函数的“l”和“v”变体不同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The “l” variants are perhaps the easiest to work with if the number of parameters is fixed when the code is written; the individual parameters simply become additional parameters to the &lt;c3&gt;&lt;s4&gt;spawnl*()&lt;/s4&gt;&lt;/c3&gt; functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085239Z" creationid="pingfangx" creationdate="20180606T085239Z">
        <seg>如果在编写代码时参数的数量是固定的，则“l”变体可能是最容易使用的变体;各个参数只是成为 &lt;c3&gt;&lt;s4&gt;spawnl*()&lt;/s4&gt;&lt;/c3&gt; 函数的附加参数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The “v” variants are good when the number of parameters is variable, with the arguments being passed in a list or tuple as the &lt;e5&gt;args&lt;/e5&gt; parameter.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085255Z" creationid="pingfangx" creationdate="20180606T085255Z">
        <seg>当参数的数量是可变的时，“v”变体是好的，参数以 &lt;e5&gt;args&lt;/e5&gt; 参数的形式在列表或元组中传递。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behaviour may be overridden by setting &lt;e0&gt;universal_newlines&lt;/e0&gt; to &lt;c1&gt;&lt;s2&gt;True&lt;/s2&gt;&lt;/c1&gt; as described above in &lt;a3&gt;&lt;s4&gt;Frequently Used Arguments&lt;/s4&gt;&lt;/a3&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092554Z" creationid="pingfangx" creationdate="20180606T092502Z">
        <seg>该行为可以通过设置 &lt;e0&gt;universal_newlines&lt;/e0&gt; 为 &lt;c1&gt;&lt;s2&gt;True&lt;/s2&gt;&lt;/c1&gt; 来重写，如 &lt;a3&gt;&lt;s4&gt;Frequently Used Arguments&lt;/s4&gt;&lt;/a3&gt; 中所述。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This does not capture stdout or stderr by default.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093507Z" creationid="pingfangx" creationdate="20180606T093507Z">
        <seg>默认情况下这不会捕获 stdout 或 stderr。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes, for example, quoting or backslash escaping filenames with spaces in them.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101458Z" creationid="pingfangx" creationdate="20180606T101458Z">
        <seg>这包括，例如，在其中包含空格的引号或反斜线转义文件名。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because the underlying &lt;c3&gt;&lt;s4&gt;CreateProcess()&lt;/s4&gt;&lt;/c3&gt; operates on strings.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101358Z" creationid="pingfangx" creationdate="20180606T101358Z">
        <seg>这是因为底层的 &lt;c3&gt;&lt;s4&gt;CreateProcess()&lt;/s4&gt;&lt;/c3&gt; 对字符串进行操作。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is equivalent to:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090840Z" creationid="pingfangx" creationdate="20180606T090840Z">
        <seg>这相当于：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is implemented by calling the Standard C function &lt;c0&gt;&lt;s1&gt;system()&lt;/s1&gt;&lt;/c0&gt;, and has the same limitations.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T085925Z" creationid="pingfangx" creationdate="20180606T085925Z">
        <seg>这是通过调用标准 C 函数 &lt;c0&gt;&lt;s1&gt;system()&lt;/s1&gt;&lt;/c0&gt; 来实现的，并且具有相同的限制。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is implemented using &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess.Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;; see that class’s documentation for more powerful ways to manage and communicate with subprocesses.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T084753Z" creationid="pingfangx" creationdate="20180606T084753Z">
        <seg>这是通过使用 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;subprocess.Popen&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; 来实现的。请参阅该类的文档以获取更多有效的方式来管理和与子流程进行通信。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that the string must be formatted exactly as it would be when typed at the shell prompt.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101453Z" creationid="pingfangx" creationdate="20180606T101453Z">
        <seg>这意味着该字符串的格式必须与在 shell 提示符下键入时的格式完全相同。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This was unintentional and did not match the behavior of Python 2 as most code expected.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101848Z" creationid="pingfangx" creationdate="20180606T101848Z">
        <seg>这是无意的，并不符合大多数代码预期的 Python 2 的行为。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To also capture standard error in the result, use &lt;c0&gt;&lt;s1&gt;stderr=subprocess.STDOUT&lt;/s1&gt;&lt;/c0&gt;:</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T092510Z" creationid="pingfangx" creationdate="20180606T092510Z">
        <seg>要在结果中捕获标准错误，请使用 &lt;c0&gt;&lt;s1&gt;stderr=subprocess.STDOUT&lt;/s1&gt;&lt;/c0&gt;：</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To do so, pass &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;PIPE&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; for the &lt;e3&gt;stdout&lt;/e3&gt; and/or &lt;e4&gt;stderr&lt;/e4&gt; arguments.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093523Z" creationid="pingfangx" creationdate="20180606T093523Z">
        <seg>为此，请为 &lt;e3&gt;stdout&lt;/e3&gt; 和/或 &lt;e4&gt;stderr&lt;/e4&gt; 参数传递 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;PIPE&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unless otherwise stated, it is recommended to pass &lt;e6&gt;args&lt;/e6&gt; as a sequence.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101024Z" creationid="pingfangx" creationdate="20180606T101024Z">
        <seg>除非另有说明，否则建议将 &lt;e6&gt;args&lt;/e6&gt; 作为序列传递。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Valid values are &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;PIPE&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt;, &lt;a6&gt;&lt;c7&gt;&lt;s8&gt;DEVNULL&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt;, an existing file descriptor (a positive integer), an existing &lt;a9&gt;&lt;s10&gt;file object&lt;/s10&gt;&lt;/a9&gt;, and &lt;c11&gt;&lt;s12&gt;None&lt;/s12&gt;&lt;/c11&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102014Z" creationid="pingfangx" creationdate="20180606T102014Z">
        <seg>有效值为 &lt;a3&gt;&lt;c4&gt;&lt;s5&gt;PIPE&lt;/s5&gt;&lt;/c4&gt;&lt;/a3&gt;，&lt;a6&gt;&lt;c7&gt;&lt;s8&gt;DEVNULL&lt;/s8&gt;&lt;/c7&gt;&lt;/a6&gt; 现有文件描述符(正整数)，现有的 &lt;a9&gt;&lt;s10&gt;file object&lt;/s10&gt;&lt;/a9&gt; 和 &lt;c11&gt;&lt;s12&gt;None&lt;/s12&gt;&lt;/c11&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wait for command to complete, then return a &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;CompletedProcess&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; instance.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093305Z" creationid="pingfangx" creationdate="20180606T093305Z">
        <seg>等待命令完成，然后返回一个 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;CompletedProcess&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 实例。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wait for command to complete, then return the &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;returncode&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; attribute.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090837Z" creationid="pingfangx" creationdate="20180606T090837Z">
        <seg>等待命令完成，然后返回 &lt;a1&gt;&lt;c2&gt;&lt;s3&gt;returncode&lt;/s3&gt;&lt;/c2&gt;&lt;/a1&gt; 属性。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Wait for command to complete.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T091940Z" creationid="pingfangx" creationdate="20180606T091940Z">
        <seg>等待命令完成。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Warning</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102112Z" creationid="pingfangx" creationdate="20180606T102112Z">
        <seg>警告</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When &lt;c1&gt;&lt;s2&gt;shell=False&lt;/s2&gt;&lt;/c1&gt;, &lt;e3&gt;executable&lt;/e3&gt; replaces the program to execute specified by &lt;e4&gt;args&lt;/e4&gt;.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101905Z" creationid="pingfangx" creationdate="20180606T101905Z">
        <seg>当 &lt;c1&gt;&lt;s2&gt;shell=False&lt;/s2&gt;&lt;/c1&gt; 时，&lt;e3&gt;executable&lt;/e3&gt; 会替换 &lt;e4&gt;args&lt;/e4&gt; 指定的程序。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When used, the internal &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;Popen&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; object is automatically created with &lt;c10&gt;&lt;s11&gt;stdin=PIPE&lt;/s11&gt;&lt;/c10&gt;, and the &lt;e12&gt;stdin&lt;/e12&gt; argument may not be used as well.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T093707Z" creationid="pingfangx" creationdate="20180606T093707Z">
        <seg>使用时，内部 &lt;a7&gt;&lt;c8&gt;&lt;s9&gt;Popen&lt;/s9&gt;&lt;/c8&gt;&lt;/a7&gt; 对象会自动使用 &lt;c10&gt;&lt;s11&gt;stdin=PIPE&lt;/s11&gt;&lt;/c10&gt; 和 &lt;e12&gt;stdin&lt;/e12&gt; 参数也可能不会被使用。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>With the default settings of &lt;c22&gt;&lt;s23&gt;None&lt;/s23&gt;&lt;/c22&gt;, no redirection will occur; the child’s file handles will be inherited from the parent.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T102039Z" creationid="pingfangx" creationdate="20180606T102039Z">
        <seg>使用默认设置 &lt;c22&gt;&lt;s23&gt;None&lt;/s23&gt;&lt;/c22&gt;，不会发生重定向;孩子的文件句柄将从父类继承。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can now use &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt; in many cases, but lots of existing code calls these functions.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T090747Z" creationid="pingfangx" creationdate="20180606T090747Z">
        <seg>您现在可以在很多情况下使用 &lt;a0&gt;&lt;c1&gt;&lt;s2&gt;run()&lt;/s2&gt;&lt;/c1&gt;&lt;/a0&gt;，但大量现有代码调用这些函数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You do not need &lt;c9&gt;&lt;s10&gt;shell=True&lt;/s10&gt;&lt;/c9&gt; to run a batch file or console-based executable.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101603Z" creationid="pingfangx" creationdate="20180606T101603Z">
        <seg>您不需要 &lt;c9&gt;&lt;s10&gt;shell=True&lt;/s10&gt;&lt;/c9&gt; 来运行批处理文件或基于控制台的可执行文件。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>any other positive value means use a buffer of approximately that size</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101806Z" creationid="pingfangx" creationdate="20180606T101806Z">
        <seg>任何其他正值意味着使用大约那个大小的缓冲区</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>negative bufsize (the default) means the system default of io.DEFAULT_BUFFER_SIZE will be used.</seg>
      </tuv>
      <tuv lang="ZH-CN" changeid="pingfangx" changedate="20180606T101822Z" creationid="pingfangx" creationdate="20180606T101822Z">
        <seg>负的 bufsize(默认值)表示将使用 io.DEFAULT_BUFFER_SIZE 的系统默认值。</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
